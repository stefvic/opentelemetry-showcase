plugins {
    id 'com.google.cloud.tools.jib'
}

dependencies {
    implementation project(':common-service')

    implementation 'org.springframework.boot:spring-boot-starter-data-cassandra-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'
    implementation 'io.opentelemetry:opentelemetry-api'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'


    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'

    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:cassandra'
    testImplementation 'org.testcontainers:kafka'

    testImplementation 'org.awaitility:awaitility'
}

bootRun {
    main = 'com.stefvic.opentelemetry.showcase.order.OrderApplication'
    systemProperties System.properties
}

jib {
    from {
        image = 'adoptopenjdk/openjdk16:latest'
    }


    to {
        image = "registry.hub.docker.com/stefvic/${project.name}:${parent.version}"
    }

    container {
        mainClass = 'com.stefvic.opentelemetry.showcase.order.OrderApplication'
        jvmFlags = [
                '-Duser.timezone=UTC'
        ]
    }
}
tasks.build.dependsOn('jib')


